#!/bin/bash

################################################################################
# Initialization

DEFAULT_NBR_OF_RETRIES=3
PID_6LBR=0
PID_WATCHDOG=0
BIN=""
PARAMS=""

################################################################################
# If this script is killed, kills child processes

trap 'if (( PID_6LBR != 0 )); then kill $PID_6LBR; echo "6LBR killed" >> /dev/stderr; fi; if ((PID_WATCHDOG != 0)); then kill $PID_WATCHDOG; fi' EXIT

################################################################################
# Application Watchdog

function application_watchdog () {
	LAST_TIMESTAMP=""
	NBR_OF_RETRIES=$DEFAULT_NBR_OF_RETRIES
	while ((1)); do
		#Add one second to avoid being synchronized with 6LBR
		sleep $((WATCHDOG_INTERVAL + 1))
		if [ `uname` = "Linux" ]; then
			TIMESTAMP=`stat -c %Y $WATCHDOG_FILE`
		else
			TIMESTAMP=`stat -f %m $WATCHDOG_FILE`
		fi
		if [ "$LAST_TIMESTAMP" != "$TIMESTAMP" ]; then
			LAST_TIMESTAMP=$TIMESTAMP
			NBR_OF_RETRIES=$DEFAULT_NBR_OF_RETRIES
		else
			NBR_OF_RETRIES=$((NBR_OF_RETRIES - 1))
			if (( NBR_OF_RETRIES == 0 )); then
				echo "6LBR watchdog failure, restarting..." >> /dev/stderr
				if ((PID_6LBR != 0)); then
					kill $PID_6LBR
					break
				fi
			fi
		fi
	done
}

################################################################################
# Read config file

if [ -n "$1" ]; then
	CFG=$1
	shift
else
	CFG=/etc/6lbr/6lbr.conf
fi

if [ -e $CFG ]; then
	echo "$0: Using config file $CFG"
	. $CFG
else
	echo "$0: Configuration file $CFG not found"
	exit 1
fi

export CETIC_6LBR_CONF=$CFG

# Bootstrapping

if [ "$LIB_6LBR" != "" ]; then
	. $LIB_6LBR/6lbr-functions
else
	. `dirname $0`/../lib/6lbr/6lbr-functions
fi

config_default

################################################################################
# Configure logs

if [ "$LOG_6LBR_OUT" != "-" ]; then
	exec >> $LOG_6LBR_OUT
fi

if [ "$LOG_6LBR_ERR" != "-" ]; then
	exec 2>> $LOG_6LBR_ERR
fi

export LOG_6LBR_OUT
export LOG_6LBR_ERR

################################################################################
# Build parameters list

# Ethernet

if [ "$RAW_ETH" = "1" ]; then
	PARAM_ETH="-r"
	ETH_IF=$DEV_ETH
	if [ "$RAW_ETH_FCS" == "1" ]; then
		PARAM_ETH="$PARAM_ETH -f"
	fi
else
	PARAM_ETH="-R"
	ETH_IF=$DEV_TAP
fi

# Radio configuration

if [ "$DEV_RADIO" != "" ]; then
	RADIO="-s $DEV_RADIO"
fi

if [ "$SOCK_RADIO" != "" ]; then
	RADIO="-a $SOCK_RADIO"
	if [ "$SOCK_PORT" != "" ]; then
		RADIO=$RADIO" -p "$SOCK_PORT
	fi
fi

if [ "$BAUDRATE" != "" ]; then
	BAUDRATE="-B $BAUDRATE"
fi

# Global configuration and setup scripts

IFUP="-U $IFUP"

IFDOWN="-D $IFDOWN"

if [ "$LOG_LEVEL" != "" ]; then
	LOG_LEVEL="-L $LOG_LEVEL"
fi

if [ "$LOG_SERVICES" != "" ]; then
	LOG_SERVICES="-S $LOG_SERVICES"
fi

PARAMS="-c $NVM $RADIO -t $ETH_IF $PARAM_ETH $BAUDRATE $IFUP $IFDOWN -w $WWW_6LBR $LOG_LEVEL $LOG_SERVICES -W $WATCHDOG_FILE -P $WATCHDOG_INTERVAL $EXTRA_PARAMS $*"

if [ "$MODE" = 'ROUTER' ]; then
	BIN=$BIN_6LBR/cetic_6lbr_router
elif [ "$MODE" = 'SMART-BRIDGE' ]; then
	BIN=$BIN_6LBR/cetic_6lbr_smart_bridge
elif [ "$MODE" = 'RPL-RELAY' ]; then
	BIN=$BIN_6LBR/cetic_6lbr_rpl_relay
elif [ "$MODE" = 'FULL-TRANSPARENT-BRIDGE' ]; then
	BIN=$BIN_6LBR/cetic_6lbr_full_transparent_bridge
elif [ "$MODE" = 'NDP-ROUTER' ]; then
	BIN=$BIN_6LBR/cetic_6lbr_ndp_router
elif [ "$MODE" = '6LR' ]; then
	BIN=$BIN_6LBR/cetic_6lbr_6lr
elif [ "$MODE" = 'RPL-ROOT' ]; then
	BIN=$BIN_6LBR/cetic_6lbr_rpl_root
else
	echo "Mode '$MODE' unknown, starting as router"
	BIN=$BIN_6LBR/cetic_6lbr_router
fi

################################################################################
# Launch 6LBR in a loop

while ((1)); do
	TIMESTAMP=`date`" : Starting 6LBR "
	echo "********************************************************************************"
	echo $TIMESTAMP
	echo "********************************************************************************" >> /dev/stderr
	echo $TIMESTAMP >> /dev/stderr
	
	echo "$BIN $PARAMS"
	$BIN $PARAMS &
	PID_6LBR=$!
	
	if [ $WATCHDOG_INTERVAL != "0" ]; then
		application_watchdog &
		PID_WATCHDOG=$!
	fi
	
	wait $PID_6LBR
	ECODE=$?
	PID_6LBR=0
	
	if ((PID_WATCHDOG != 0)); then
		if kill -0 $PID_WATCHDOG 2> /dev/null; then
			kill $PID_WATCHDOG
			wait $PID_WATCHDOG
		fi
		PID_WATCHDOG=0
	fi
	if [ $ECODE != 0 ]; then
        # 6LBR returned an error, do not start it again
        echo `date`" : $BIN failed, exit code: $ECODE" >> /dev/stderr
        if [ "$STOP_AFTER_CRASH" == "1" ]; then
			break
		fi
	fi
done
